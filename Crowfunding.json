{"hints": {}, "source": {"approval": "", "clear": "I3ByYWdtYSB2ZXJzaW9uIDcKcHVzaGludCAwIC8vIDAKcmV0dXJu"}, "schema": {"local": {"declared": {}, "dynamic": {}}, "global": {"declared": {"db_id": {"type": "bytes", "key": "db_id", "descr": "related firebase campaign id"}, "end_date": {"type": "uint64", "key": "end_date", "descr": "ending date (UNIX timestamp)"}, "is_closed": {"type": "uint64", "key": "is_closed", "descr": "smart contract status, 0 -> open / 1+ -> closed"}, "receiver": {"type": "bytes", "key": "receiver", "descr": ""}, "target": {"type": "uint64", "key": "target", "descr": "target to reach"}}, "dynamic": {}}}, "contract": {"name": "Crowfunding", "methods": [{"name": "claim", "args": [], "returns": {"type": "string"}, "desc": "claim funds"}, {"name": "donate", "args": [{"type": "pay", "name": "donation"}], "returns": {"type": "string"}, "desc": "fund a campaign"}, {"name": "get_collected", "args": [], "returns": {"type": "uint64"}, "desc": "return collected funds"}, {"name": "get_db_id", "args": [], "returns": {"type": "string"}, "desc": "return collected funds"}, {"name": "refund", "args": [{"type": "account", "name": "account"}, {"type": "uint64", "name": "amount"}], "returns": {"type": "string"}, "desc": "refund funds"}, {"name": "set_db_id", "args": [{"type": "string", "name": "db_id"}], "returns": {"type": "string"}, "desc": "set related firebase campaign id"}, {"name": "set_end_date", "args": [{"type": "uint64", "name": "end_date"}], "returns": {"type": "uint64"}, "desc": "set the end date (UNIX timestamp)"}, {"name": "set_receiver", "args": [{"type": "string", "name": "receiver"}], "returns": {"type": "string"}, "desc": "set related firebase campaign id"}, {"name": "set_target", "args": [{"type": "uint64", "name": "target"}], "returns": {"type": "uint64"}, "desc": "set the target"}], "networks": {}}}